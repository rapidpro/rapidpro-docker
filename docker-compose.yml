#
# NOTE: This docker-compose is not used for building the rapidpro docker
#       releases, it is a compose file for local development purposes.
#

version: '2'
services:
  rapidpro:
    image: praekeltfoundation/rapidpro:v5.0.9
    depends_on:
      - redis
      - postgresql
    ports:
      - '8000:8000'
    environment:
      - DOMAIN_NAME=${RAPIDPRO_IP_ADDRESS}
      - ALLOWED_HOSTS=${RAPIDPRO_IP_ADDRESS}
      - TEMBA_HOST=${RAPIDPRO_IP_ADDRESS}
      - DJANGO_DEBUG=off
      - MAILROOM_URL=http://mailroom:8090
      - DATABASE_URL=postgresql://postgres:postgres@postgresql/rapidpro
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=super-secret-key
      - MANAGEPY_COLLECTSTATIC=on
      - MANAGEPY_COMPRESS=on
      - MANAGEPY_INIT_DB=on
      - MANAGEPY_MIGRATE=on
  celery_base:
    image: praekeltfoundation/rapidpro:v5.0.9
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
      - mailroom
      - elasticsearch
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql/rapidpro
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=super-secret-key
    command: ["/venv/bin/celery", "--beat", "--app=temba", "worker", "--loglevel=INFO", "--queues=celery,flows"]
  celery_msgs:
    image: praekeltfoundation/rapidpro:v5.0.9
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
      - mailroom
      - elasticsearch
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql/rapidpro
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=super-secret-key
    command: ["/venv/bin/celery", "--app=temba", "worker", "--loglevel=INFO", "--queues=msgs,handler"]
  redis:
    image: redis:alpine
  postgresql:
    image: mdillon/postgis:9.6
    environment:
      - POSTGRES_DB=rapidpro
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.0
    environment:
      - bootstrap.memory_lock=true
      - ES_HEAP_SIZE=128m
      - ES_JAVA_OPTS=-Xms128m -Xmx128m
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
  rp-indexer:
    container_name: rp-indexer
    build:
      context: .
      dockerfile: rp-indexer.dockerfile
      args:
        - RP_INDEXER_VERSION=2.0.0
    depends_on:
     - rapidpro
    links:
      - postgresql
      - elasticsearch
    environment:
      - INDEXER_DB=postgresql://postgres:postgres@postgresql/rapidpro?sslmode=disable
      - INDEXER_ELASTIC_URL=http://elastic:changeme@elasticsearch:9200
  rp-archiver:
    container_name: rp-archiver
    build:
      context: .
      dockerfile: rp-archiver.dockerfile
      args:
        - RP_ARCHIVER_VERSION=2.0.0
    depends_on:
      - rapidpro
    links:
      - postgresql
    environment:
      - ARCHIVER_DB=postgresql://postgres:postgres@postgresql/rapidpro?sslmode=disable
  courier:
    container_name: courier
    build:
      context: .
      dockerfile: courier.dockerfile
      args:
        - COURIER_VERSION=2.0.2
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
    environment:
      - COURIER_DOMAIN=${RAPIDPRO_IP_ADDRESS}
      - COURIER_SPOOL_DIR=/tmp/courier/
      - COURIER_DB=postgres://postgres:postgres@postgresql/rapidpro
      - COURIER_REDIS=redis://redis:6379/8
  mailroom:
    container_name: mailroom
    build:
      context: .
      dockerfile: mailroom.dockerfile
      args:
        - MAILROOM_VERSION=2.0.9
    links:
      - redis
      - postgresql
    environment:
      - MAILROOM_ADDRESS=0.0.0.0
      - MAILROOM_DOMAIN=${RAPIDPRO_IP_ADDRESS}
      - MAILROOM_REDIS=redis://redis:6379/15
      - MAILROOM_DB=postgres://postgres:postgres@postgresql/rapidpro?sslmode=disable
      - MAILROOM_LOG_LEVEL=debug

