sudo: required
services:
  - docker
cache:
  directories:
    - $HOME/postgresql
env:
  global:
    - GREP_TIMEOUT=360
    - REGISTRY_USER=sdehaan
    # NOTE: this is generated with `travis encrypt REGISTRY_PASS="the-password"`
    #       which is decrypted by Travis CI and set as environment variables
    - secure: "YcWV/630/NXezcERlKdpdiemvx5bQOdSmFrBhV4QGYsVU+/iJImP/tjv4Y4kqS75Gut+MXjd9JAYzsa9qUvcQacFWWp14G0b853EayBjmv2IHwyU4L80RiaiOlVQ7LEKGU456QXTqjXlDTpyKqnVbKqOg+ks7C8wkRhPFe+GJ1Tevz2jr5XFrwmLxqQVC650Sqec7DqrvIwYt5wMjyAhzBt9ADSrsKr6UJY2NOeyAresh3RmKky/lmr6lcCJyCfm9WwK47D2btS6DcXlPU9ebCBoU9A860kvMpdHfiP24VEsrP+EATRDBgtNYrT5PDVMooo1dT1QcS/wuAyd47XfFTe58blTTvsqqgbLVsw3/XDdrCQgHChbQwQ0xIZ5Nmnea8fHvFxTC9vRO3FRp3fmc621m03yeWM6Di7yJufYxK7o29P6g6bu7ecG/clR/LhUZsX+VxpzMM4Jv4wuvy+GW8X3bY62w7tWD2nNihDDA3lMFPOsM4yXVyuQJ3QQEmTLUjE1hNDfeF4dKyyiOzqN/NdOQa0QTRN+iBeKgFZR47YhLUHhIz6VNDavTqd/Oljh1D9Sk4k1NzQg/0I8LOEO72g+dk/HBHi82LbWNA3tlbRh21/Mmp2D/bHkQM38yV2Z0gCtSvMruS2k0HKChC6UYYfVwBkLbu2CM1uwPlAhFgQ="

# Update Docker Engine
before_install:
  - sudo apt-get update
  - sudo apt-get install -qy -o Dpkg::Options::="--force-confold" docker-engine coreutils

before_cache:
  - docker exec --user=postgres postgresql pg_dump rapidpro > $HOME/postgresql/rapidpro.sql

before_script:
  - image="smn/rapidpro-docker"
  - version="$(curl -s https://api.github.com/repos/nyaruka/rapidpro/tags  | jq -r .[].name | sort | tail -n1)"

script:
  # Setup postgresql and load sql dump if exists
  - docker pull mdillon/postgis:9.6
  - docker run -d --name postgresql -e POSTGRES_DB=rapidpro mdillon/postgis:9.6
  - timeout $GREP_TIMEOUT grep -m 1 'PostgreSQL init process complete; ready for start up.' <(docker logs --follow postgresql 2>&1)
  # Load the cached postgresql dump to speed up migrations
  - if [[ -f $HOME/postgresql/rapidpro.sql ]]; then cat $HOME/postgresql/rapidpro.sql | docker exec -i --user=postgres postgresql psql rapidpro; fi

  # Setup redis
  - docker pull redis:alpine
  - docker run -d --name redis redis:alpine
  - timeout $GREP_TIMEOUT grep -m 1 'The server is now ready to accept connections on port 6379' <(docker logs --follow redis 2>&1)

  # Build RapidPro and run it
  - docker pull rapidpro/rapidpro-base
  - docker build --tag "$image" --build-arg RAPIDPRO_VERSION=$version .
  - >
    docker run --name rapidpro \
      --env-file docker.envfile \
      --link redis \
      --link postgresql \
      --publish 8000:8000 \
      --detach \
      "$image"

  - timeout $GREP_TIMEOUT grep -m 1 'static files copied' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'Compressing... done' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'Running migrations' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'spawned uWSGI http 1' <(docker logs --follow rapidpro 2>&1)
  - docker exec rapidpro /venv/bin/python /rapidpro/manage.py check

after_script:
  - docker logs rapidpro
  - docker images

before_deploy:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
deploy:
  provider: script
  skip_cleanup: true
  script: ./deploy.sh "$image" "$version"
  on:
    branch: master
